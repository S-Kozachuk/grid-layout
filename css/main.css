* {
    box-sizing: border-box;
}
html {
    height: 100%;
}
body {
    height: 100%;
    font-family: "Roboto Condensed", sans-serif;
    color: #fff;
}

body,
h1,
h2,
h3,
h4,
p,
ul {
    margin: 0;
    padding: 0;
}

img {
    max-width: 100%;
    height: auto;
    vertical-align: top;
}

a {
    margin-right: 10px;
    padding: 10px 25px;
    text-decoration: none;
    border-radius: 10px;
    color: #fff;
    background-color: #794f45;
}

a:hover {
    color: black;
    transition: 0.5s;
}

.wrapper {
    padding: 20px;
    min-height: 100%;
    background-color: #473b3b;
}

h1 {
    margin-top: 20px;
    margin-bottom: 20px;
    font-size: 46px;
}

h2 {
    margin-top: 20px;
    margin-bottom: 20px;
    font-size: 35px;
}

h3 {
    margin-top: 30px;
    color: black;
}

/* 
Контейнеры сетки (grid) не являются блочными
элементами. Поэтому часть CSS свойств с ними
не работает.

Cвойство dispay: grid создаёт контейнер 
уровня блока т.е. занимает 100% ширины экрана.
*/
.grid {
    display: grid;
    margin: 0px 0px 20px 0px;
    padding: 20px;
    font-size: 30px;
    background-color: #794f45;
}

/* 
Cвойство dispay: inline-grid создаёт контейнер 
уровня строки. Ширина контейнера будет равна
находящемуся внутри контенту.
*/
.grid-inline {
    display: inline-grid;
    padding: 20px;
    font-size: 30px;
    background-color: #77608d;
}

/* Lesson 2 */
.grid-main {
	margin: 0px 0px 20px 0px;
    padding: 20px;
    font-size: 30px;
    background-color: #794f45;
}

.grid__body {
	display: grid;
	/* 
	Можно комбинировать относительные(%) и 
	фиксированные(px) значения.
	*/
	grid-template-columns: 1fr 1fr 1fr;
	grid-template-rows: 50% 50%;
}

.grid__item {
    padding: 20px;
    text-align: center;
    border: 2px dashed rgba(255, 255, 255, 0.2);
}
